state space:
    huis batterij combinaties (5^150) * route tussen batterij en huis (???)

algorithmes:
    1&2:
        huis batterij combinaties:
            random (constraints passed)
            greedy korste route tussen huis en batterij (constraints not passed yet), volgorde van huizen plaatsen maakt niet uit
        route tussen batterij en huis:
            optimaal prunen met kortste route (state space is altijd gereduceerd tot 1)
    3&4:
        huis batterij combinaties:
            greedy met kortste route tussen huis en batterij/andere kabel, volgorde van huizen plaatsen maakt uit
        route tussen batterij en huis:
            niet-optimaal prunen door korste route of random route te kiezen -> hill climber om te verbeteren

todo:
    nieuw algorithme voor shared kabels waarin korste afstand tot kabels verwerkt is

    greedy algorithme werkend krijgen (DONE)

    random en greedy werkend krijgen voor shared kabels

    connect_house_battery tweede gedeelte netjes maken

    hill climber toepassen op het leggen van de niet unieke kabels

    kabel class updaten naar 2 coordinaten per kabel ipv 1 coordinaat (DONE)
    mogelijke datastructuur: [[(0,1), (0,2)], [(..), (..)], .. ]
    binnenste lijst is een kabelstuk

    UML maken
